{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["MovePage","Pagination","total","perPage","currentPage","onPageChange","amountOfItems","Math","ceil","prevDisabled","nextDisabled","movePage","move","moveTo","Next","Prev","Error","className","classNames","disabled","href","onClick","Array","map","_","index","active","pageId","random","items","from","to","numbers","n","push","getNumbers","App","useState","setCurrentPage","itemsPerPage","setItemsPerPage","length","itemsToShow","slice","id","value","onChange","event","target","handlerItemsPerPage","htmlFor","page","item","toString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc9ca7de.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  total: number, // total number of items to paginate\n  perPage: number, // number of items per page\n  currentPage: number, /* optional with 1 by default */\n  onPageChange: (page: number) => void;\n};\n\nenum MovePage {\n  Next = 'next',\n  Prev = 'prev',\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const amountOfItems = Math.ceil(total / perPage);\n  const prevDisabled = currentPage === 1;\n  const nextDisabled = currentPage === amountOfItems;\n\n  const handlerClick = (pageId: number) => {\n    if (pageId !== currentPage) {\n      onPageChange(pageId);\n    }\n  };\n\n  const movePage = (move: MovePage) => {\n    let moveTo = 1;\n\n    switch (move) {\n      case MovePage.Next:\n        moveTo = currentPage + 1;\n        break;\n\n      case MovePage.Prev:\n        moveTo = currentPage - 1;\n        break;\n\n      default:\n        throw new Error('unexpected moving type');\n    }\n\n    onPageChange(moveTo);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item',\n        {\n          disabled: prevDisabled,\n        },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={prevDisabled}\n          onClick={() => {\n            if (!prevDisabled) {\n              movePage(MovePage.Prev);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n      {[...Array(amountOfItems)].map((_, index) => (\n        <li\n          key={Math.random()}\n          className={classNames(\n            'page-item',\n            {\n              active: currentPage === index + 1,\n            },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${index + 1}`}\n            onClick={() => {\n              handlerClick(index + 1);\n            }}\n          >\n            {`${index + 1}`}\n          </a>\n        </li>\n      ))}\n      <li className={classNames(\n        'page-item',\n        {\n          disabled: nextDisabled,\n        },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={nextDisabled}\n          onClick={() => {\n            if (!nextDisabled) {\n              movePage(MovePage.Next);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n\n  const total = items.length;\n  const from = currentPage * itemsPerPage - itemsPerPage;\n  const to = currentPage * itemsPerPage > total\n    ? total\n    : currentPage * itemsPerPage;\n  const itemsToShow = items.slice(from, to);\n\n  const handlerItemsPerPage = (event: ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${from + 1} - ${to} of ${total})` }\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={(event) => {\n              handlerItemsPerPage(event);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length} // total number of items to paginate\n        perPage={itemsPerPage} // number of items per page\n        currentPage={currentPage} /* optional with 1 by default */\n        onPageChange={(page) => {\n          setCurrentPage(page);\n        }}\n      />\n\n      <ul>\n        {itemsToShow.map(item => (\n          <li data-cy=\"item\" key={getRandomDigits()}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}